{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["startPosition","App","React","useState","player","setPlayer","top","setTop","left","setLeft","isGameOver","setIsGameOver","playerHPBar","setplayerHPBar","playerHP","setPlayerHP","enemyHPBar","setEnemyHPBar","enemyHP","setEnemyHP","arrowsNumbers","setArrowsNumbers","turn","setTurn","moveUp","e","preventDefault","style","transform","moveDown","moveLeft","moveRight","damagePlayer","width","generateArrow","Math","floor","random","useEffect","document","querySelector","background","arrows","i","arrowNumber","push","newArrowsNumber","filter","n","className","tabIndex","onKeyDown","keyCode","map","renderArrow","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0ba117da.chunk.js","sourcesContent":["const startPosition = {\n  top: 240,\n  left: 120\n}\n\nexport { startPosition };","import './App.css';\nimport React from 'react';\nimport { startPosition } from './config';\n\nfunction App() {\n  const [player, setPlayer] = React.useState(null);\n  const [top, setTop] = React.useState(startPosition.top);\n  const [left, setLeft] = React.useState(startPosition.left);\n  const [isGameOver, setIsGameOver] = React.useState(false);\n\n  // HP\n  const [playerHPBar, setplayerHPBar] = React.useState(null);\n  const [playerHP, setPlayerHP] = React.useState(100);\n  const [enemyHPBar, setEnemyHPBar] = React.useState(null);\n  const [enemyHP, setEnemyHP] = React.useState(100);\n\n  // Arrows\n  const [arrowsNumbers, setArrowsNumbers] = React.useState([]);\n  const [turn, setTurn] = React.useState(-1);\n\n  const damage = 5;\n\n  function movement(e) {\n    switch (e.keyCode) {\n      case 87:\n        moveUp(e);\n        break;\n\n      case 65:\n        moveLeft(e);\n        break;\n\n      case 83:\n        moveDown(e);\n        break;\n\n      case 68:\n        moveRight(e);\n        break;\n\n      case 32:\n        damagePlayer(e);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function moveUp(e) {\n    e.preventDefault();\n\n    setTop(top - damage);\n    setTurn(0);\n    player.style.top = top - damage + 'px';\n    player.style.transform = 'rotate(270deg)';\n  }\n\n  function moveDown(e) {\n    e.preventDefault();\n\n    setTop(top + damage);\n    setTurn(2);\n    player.style.top = top + damage + 'px';\n    player.style.transform = 'rotate(90deg)';\n  }\n\n  function moveLeft(e) {\n    e.preventDefault();\n\n    setLeft(left - damage);\n    setTurn(3);\n    player.style.left = left - damage + 'px';\n    player.style.transform = 'rotate(180deg)';\n  }\n\n  function moveRight(e) {\n    e.preventDefault();\n\n    setLeft(left + damage);\n    setTurn(1);\n    player.style.left = left + damage + 'px';\n    if (player.style.transform === 'rotate(270deg)') player.style.transform = 'rotate(360deg)';\n    else player.style.transform = 'rotate(0deg)';\n  }\n\n  function damagePlayer() {\n    setPlayerHP(playerHP - 5);\n    playerHPBar.style.width = playerHP - 5 + '%';\n  }\n\n  function damageEnemy() {\n    setEnemyHP(enemyHP - 5);\n    enemyHPBar.style.width = enemyHP - 5 + '%';\n  }\n\n  function generateArrow() {\n    return Math.floor(Math.random() * 4);\n  }\n\n  function renderArrow(arrowNumber) {\n    switch (arrowNumber) {\n      case 0:\n        return (<span className=\"arrow\">↑</span>);\n\n      case 1:\n        return (<span className=\"arrow\">→</span>);\n\n      case 2:\n        return (<span className=\"arrow\">↓</span>);\n\n      case 3:\n        return (<span className=\"arrow\">←</span>);\n\n      default:\n        break;\n    }\n  }\n\n  React.useEffect(() => {\n    setPlayer(document.querySelector('.player'));\n    setplayerHPBar(document.querySelector('.health-bar_player'));\n    setEnemyHPBar(document.querySelector('.health-bar_enemy'));\n  }, []);\n\n  React.useEffect(() => {\n    if (playerHP === 0) {\n      setIsGameOver(true);\n      player.style.background = 'red';\n    }\n  }, [playerHP, player])\n\n  React.useEffect(() => {\n    if (enemyHP === 0) {\n      setIsGameOver(true);\n      player.style.background = 'lime';\n    }\n  }, [enemyHP, player])\n\n  React.useEffect(() => {\n    const arrows = [];\n    for (let i = 0; i < 9; i++) {\n      const arrowNumber = generateArrow();\n      arrows.push(arrowNumber);\n    }\n    setArrowsNumbers(arrows);\n    // eslint-disable-next-line\n  }, [])\n\n  React.useEffect(() => {\n    if (turn === -1) return;\n    if (turn === arrowsNumbers[4]) {\n      const arrowNumber = generateArrow();\n      const newArrowsNumber = arrowsNumbers.filter((n, i) => i !== 0);\n      setArrowsNumbers([...newArrowsNumber, arrowNumber]);\n      damageEnemy();\n    } else {\n      damagePlayer();\n    }\n    setTurn(-1);\n    // eslint-disable-next-line\n  }, [arrowsNumbers, turn]);\n\n  return (\n    <div className=\"app\" tabIndex=\"0\" onKeyDown={isGameOver ? null : movement}>\n      <div className=\"game\">\n        <div className=\"arrows\">\n          <p className=\"arrows__container\">\n            {\n              arrowsNumbers.map((arrowNumber) => renderArrow(arrowNumber))\n            }\n          </p>\n        </div>\n        <div className=\"health-bar health-bar_enemy\"></div>\n        <div className=\"player\">\n          <div>\n            <div className=\"eyes\">\n              <div className=\"eye\"></div>\n              <div className=\"eye\"></div>\n            </div>\n            <div className=\"nose\"></div>\n          </div>\n          <div className=\"hair\"></div>\n        </div>\n        <div className=\"health-bar health-bar_player\" style={{ width: '100%' }}></div>\n      </div>\n      <button className=\"game__move-button game__move-button_to_up\" onClick={isGameOver ? null : moveUp}>↑</button>\n      <button className=\"game__move-button game__move-button_to_right\" onClick={isGameOver ? null : moveRight}>→</button>\n      <button className=\"game__move-button game__move-button_to_down\" onClick={isGameOver ? null : moveDown}>↓</button>\n      <button className=\"game__move-button game__move-button_to_left\" onClick={isGameOver ? null : moveLeft}>←</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}